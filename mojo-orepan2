#!/usr/bin/env perl

use Mojolicious::Lite;

use OrePAN2::Indexer;
use OrePAN2::Injector;
use File::Temp qw(tempdir);
use File::Spec;

die 'OREPAN_ROOT must be specified' unless $ENV{OREPAN_ROOT};
push @{app->static->paths}, $ENV{OREPAN_ROOT};

my $CPAN_MIRROR = $ENV{CPAN_MIRROR} // 'https://cpan.metacpan.org';

post '/upload' => sub {
  my ($c) = @_;

  return $c->render(text => 'Uploads limited to 16MB', status => 400)
    if $c->req->is_limit_exceeded;

  return $c->render(text => 'Missing upload data', status => 400)
    unless $c->param('pause99_add_uri_upload');

  my $file = $c->param('pause99_add_uri_httpupload');
  my $author = $c->param('HIDDENNAME');

  my $tmp = tempdir(CLEANUP => 1);
  my $module_path = File::Spec->catpath($tmp, $file->filename);
  $file->move_to($module_path);

  unlink $file->filename if -f $file->filename;

  my $injector = OrePAN2::Injector->new(
    directory => $ENV{OREPAN2_PATH},
    author => uc $author,
  );
  $injector->inject($module_path);

  OrePAN2::Indexer->new(directory => $ENV{OREPAN2_PATH})->make_index(
    no_compress => !1,
  );

  $c->render(text => 'OK');
};

get '/*path' => {path => ''} => sub {
  my ($c) = @_;

  if ($c->req->url->path->to_string =~ /^\/authors/) {
    return $c->redirect_to($CPAN_MIRROR . $c->req->url->path->to_string);
  }

  $c->render(text => 'Not Found', status => 404);
};

app->start;
